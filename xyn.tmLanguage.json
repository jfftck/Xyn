
{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Xyn",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#types"
    },
    {
      "include": "#maybe-variables"
    },
    {
      "include": "#async-keywords"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#identifiers"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.xyn",
          "match": "//.*$"
        },
        {
          "name": "comment.line.number-sign.xyn",
          "match": "#.*$"
        }
      ]
    },
    "types": {
      "name": "storage.type.xyn",
      "match": "<[^>]+>"
    },
    "maybe-variables": {
      "name": "variable.other.maybe.xyn",
      "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\?"
    },
    "async-keywords": {
      "name": "keyword.control.async.xyn",
      "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*!"
    },
    "keywords": {
      "name": "keyword.control.xyn",
      "match": "\\b(fn|if|else|match|where|return|import|export|type|struct|enum|const|public|private|shared|move|copy|borrow|as|in|true|false|while|for|break|continue|signal|set|main|log|new|yield)\\b"
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.xyn",
          "match": ":=|<:=|<-|<->|->|="
        },
        {
          "name": "keyword.operator.comparison.xyn",
          "match": "==|!=|<=|>=|<|>"
        },
        {
          "name": "keyword.operator.arithmetic.xyn",
          "match": "\\+|\\-|\\*|\\/|%"
        },
        {
          "name": "keyword.operator.logical.xyn",
          "match": "&&|\\|\\||!"
        },
        {
          "name": "keyword.operator.bitwise.xyn",
          "match": "&|\\||\\^|~|<<|>>"
        },
        {
          "name": "keyword.operator.other.xyn",
          "match": "@|\\$|\\?|\\.|#"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.xyn",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.xyn",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.xyn",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.xyn",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.backtick.xyn",
          "begin": "`",
          "end": "`"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.decimal.xyn",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        },
        {
          "name": "constant.numeric.hex.xyn",
          "match": "\\b0[xX][0-9a-fA-F]+\\b"
        },
        {
          "name": "constant.numeric.binary.xyn",
          "match": "\\b0[bB][01]+\\b"
        }
      ]
    },
    "identifiers": {
      "name": "variable.other.xyn",
      "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
    }
  },
  "scopeName": "source.xyn"
}
